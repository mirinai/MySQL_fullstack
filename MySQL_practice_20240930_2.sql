USE SCOTT;

-- Q1: SQL-99 이전과 이후 방식 비교
-- BEFORE SQL-99: DEPT 테이블과 EMP 테이블을 사용하여 2000 이상의 급여를 받는 사원들의 부서 정보와 사원 정보를 출력
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, SAL 
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO -- E와 D 테이블을 DEPTNO로 연결
  AND E.SAL > 2000 -- 2000 이상의 급여를 받는 사원만 선택
ORDER BY E.DEPTNO; -- 부서번호 기준으로 정렬

-- AFTER SQL-99: JOIN 구문을 사용하여 SQL-99 이후 스타일로 작성
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, SAL 
FROM EMP E JOIN DEPT D ON E.DEPTNO = D.DEPTNO -- 조인 구문을 명시적으로 사용
WHERE E.SAL > 2000
ORDER BY E.DEPTNO;

-- Q2: SQL-99 이전과 이후 방식 비교
-- BEFORE SQL-99: 특정 부서의 평균, 최대, 최소 급여와 사원 수를 출력
SELECT D.DEPTNO, D.DNAME, FLOOR(AVG(E.SAL)) AS AVG_SAL, MAX(E.SAL) AS MAX_SAL, MIN(E.SAL) AS MIN_SAL, COUNT(E.EMPNO) AS CNT
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO -- E와 D 테이블을 DEPTNO로 연결
  AND D.DNAME IN ('ACCOUNTING', 'RESEARCH', 'SALES') -- 특정 부서들만 선택
GROUP BY D.DEPTNO, D.DNAME;

-- AFTER SQL-99: NATURAL JOIN을 사용한 SQL-99 방식
SELECT D.DEPTNO, D.DNAME, FLOOR(AVG(E.SAL)) AS AVG_SAL, MAX(E.SAL) AS MAX_SAL, MIN(E.SAL) AS MIN_SAL, COUNT(E.EMPNO) AS CNT
FROM EMP E NATURAL JOIN DEPT D -- 자연 조인을 사용하여 동일한 컬럼으로 연결
WHERE D.DNAME IN ('ACCOUNTING', 'RESEARCH', 'SALES')
GROUP BY D.DEPTNO, D.DNAME;

-- Q3: SQL-99 이전과 이후 방식 비교
-- BEFORE SQL-99: LEFT OUTER JOIN을 사용하여 부서에 소속된 사원의 정보와 부서 정보를 모두 출력
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
FROM EMP E LEFT OUTER JOIN DEPT D ON E.DEPTNO = D.DEPTNO -- LEFT OUTER JOIN을 사용
ORDER BY E.DEPTNO, E.ENAME;

-- AFTER SQL-99: USING 구문을 사용하여 동일한 컬럼으로 JOIN
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
FROM EMP E JOIN DEPT D USING (DEPTNO) -- USING 구문으로 동일한 컬럼 연결
ORDER BY D.DEPTNO, D.DNAME;

-- Q4: 복잡한 조인으로 여러 테이블을 연결하여 사원과 상급자, 급여 등급 정보를 출력하는 쿼리
-- 상급자 정보, 급여 등급 정보를 포함한 사원 데이터를 출력

-- 첫 번째 쿼리: 사원과 부서 정보를 연결하여 각 부서별 사원 데이터를 출력
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.MGR, E.SAL, COUNT(E.DEPTNO) AS DEPTNO_1
FROM EMP E
LEFT OUTER JOIN DEPT D ON E.DEPTNO = D.DEPTNO -- 부서 정보와 연결
GROUP BY D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.MGR, E.SAL
ORDER BY D.DEPTNO, D.DNAME;

-- 두 번째 쿼리: 급여 등급 테이블과 사원 테이블을 연결하여 급여 범위와 급여 등급 정보를 출력
SELECT S.LOSAL, S.HISAL, S.GRADE, E.EMPNO AS MGR_EMPNO, E.ENAME AS MGR_ENAME
FROM SALGRADE S
RIGHT OUTER JOIN EMP E ON E.SAL BETWEEN S.LOSAL AND S.HISAL; -- 급여 범위에 맞는 사원 정보와 연결

-- 복합 쿼리: 사원, 부서, 급여 등급, 상급자 정보가 모두 포함된 복합 쿼리
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.MGR, E.SAL, COUNT(E.DEPTNO) AS DEPTNO_1, 
       S.LOSAL, S.HISAL, S.GRADE, M.ENAME AS MGR_ENAME -- 상급자의 이름도 출력
FROM EMP E
LEFT OUTER JOIN DEPT D ON E.DEPTNO = D.DEPTNO -- 부서 정보 연결
LEFT OUTER JOIN SALGRADE S ON E.SAL BETWEEN S.LOSAL AND S.HISAL -- 급여 등급 정보 연결
LEFT OUTER JOIN EMP M ON E.MGR = M.EMPNO -- 상급자 정보 연결
GROUP BY D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.MGR, E.SAL, S.LOSAL, S.HISAL, S.GRADE, M.ENAME -- 그룹화
ORDER BY D.DEPTNO, D.DNAME;

-- 8-1: SQL-99 이전과 이후 방식 비교
-- SQL-99 이전 방식: 부서와 사원 정보를 조인하여 급여가 2000 이상인 사원 출력
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO -- 부서와 사원을 DEPTNO로 조인
  AND E.SAL > 2000;

-- SQL-99 방식: NATURAL JOIN을 사용하여 동일한 컬럼을 기준으로 연결
SELECT DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM EMP E NATURAL JOIN DEPT D -- 자연 조인을 사용하여 동일한 컬럼 연결
WHERE E.SAL > 2000;

-- 8-2: SQL-99 이전과 이후 방식 비교
-- SQL-99 이전 방식: 부서별 평균, 최대, 최소 급여 및 사원 수 출력
SELECT D.DEPTNO, D.DNAME, TRUNCATE(AVG(SAL), 0) AS AVG_SAL, MAX(SAL) AS MAX_SAL, MIN(SAL) AS MIN_SAL, COUNT(*) AS CNT
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO -- 부서와 사원을 DEPTNO로 조인
GROUP BY D.DEPTNO, D.DNAME;

-- SQL-99 방식: JOIN 구문을 사용하여 동일한 결과를 출력
SELECT D.DEPTNO, D.DNAME, TRUNCATE(AVG(SAL), 0) AS AVG_SAL, MAX(SAL) AS MAX_SAL, MIN(SAL) AS MIN_SAL, COUNT(*) AS CNT
FROM EMP E JOIN DEPT D USING (DEPTNO) -- USING을 사용한 조인
GROUP BY D.DEPTNO, D.DNAME;

-- 8-3: SQL-99 이전과 이후 방식 비교
-- SQL-99 이전 방식: OUTER JOIN을 사용하여 부서와 사원 정보를 연결 (구식 JOIN 문법)
-- SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
-- FROM EMP E, DEPT D
-- WHERE E.DEPTNO(+) = D.DEPTNO -- 부서에 속한 사원만 선택 (Oracle 문법)
-- ORDER BY D.DEPTNO, E.ENAME;

-- SQL-99 방식: OUTER JOIN을 사용한 방식으로 부서와 사원 정보를 연결
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
FROM EMP E RIGHT OUTER JOIN DEPT D ON E.DEPTNO = D.DEPTNO -- RIGHT OUTER JOIN 사용
ORDER BY D.DEPTNO, E.ENAME;

-- 8-4: SQL-99 이전과 이후 방식 비교
-- SQL-99 이전 방식: 복잡한 OUTER JOIN을 사용하여 부서, 급여 등급, 상급자 정보를 연결
-- SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.MGR, E.SAL, E.DEPTNO, S.LOSAL, S.HISAL, S.GRADE, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
-- FROM EMP E, DEPT D, SALGRADE S, EMP E2
-- WHERE E.DEPTNO(+) = D.DEPTNO
--   AND E.SAL BETWEEN S.LOSAL(+) AND S.HISAL(+)
--   AND E.MGR = E2.EMPNO(+)
-- ORDER BY D.DEPTNO, E.EMPNO;

-- SQL-99 방식: 최신 JOIN 구문을 사용하여 동일한 데이터를 연결
SELECT 
    D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.MGR, E.SAL, E.DEPTNO,
    S.LOSAL, S.HISAL, S.GRADE,
    E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
FROM 
    EMP E 
    RIGHT OUTER JOIN DEPT D ON E.DEPTNO = D.DEPTNO -- 부서 정보 연결
    LEFT OUTER JOIN SALGRADE S ON E.SAL BETWEEN S.LOSAL AND S.HISAL -- 급여 등급 정보 연결
    LEFT OUTER JOIN EMP E2 ON E.MGR = E2.EMPNO -- 상급자 정보 연결
ORDER BY D.DEPTNO, E.EMPNO; -- 부서번호와 사원번호 기준 정렬

    